//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public BusyRemovedListenerComponent BusyRemovedListener { get { return (BusyRemovedListenerComponent)GetComponent(GameComponentsLookup.BusyRemovedListener); } }
	public bool HasBusyRemovedListener { get { return HasComponent(GameComponentsLookup.BusyRemovedListener); } }

	public void AddBusyRemovedListener(System.Collections.Generic.List<IBusyRemovedListener> newValue)
	{
		var index = GameComponentsLookup.BusyRemovedListener;
		var component = (BusyRemovedListenerComponent)CreateComponent(index, typeof(BusyRemovedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceBusyRemovedListener(System.Collections.Generic.List<IBusyRemovedListener> newValue)
	{
		var index = GameComponentsLookup.BusyRemovedListener;
		var component = (BusyRemovedListenerComponent)CreateComponent(index, typeof(BusyRemovedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyBusyRemovedListenerTo(BusyRemovedListenerComponent copyComponent)
	{
		var index = GameComponentsLookup.BusyRemovedListener;
		var component = (BusyRemovedListenerComponent)CreateComponent(index, typeof(BusyRemovedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = copyComponent.value;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveBusyRemovedListener()
	{
		RemoveComponent(GameComponentsLookup.BusyRemovedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity : IBusyRemovedListenerEntity { }

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherBusyRemovedListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> BusyRemovedListener
	{
		get
		{
			if (_matcherBusyRemovedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.BusyRemovedListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherBusyRemovedListener = matcher;
			}

			return _matcherBusyRemovedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public void AddBusyRemovedListener(IBusyRemovedListener value)
	{
		var listeners = HasBusyRemovedListener
			? BusyRemovedListener.value
			: new System.Collections.Generic.List<IBusyRemovedListener>();
		listeners.Add(value);
		ReplaceBusyRemovedListener(listeners);
	}

	public void RemoveBusyRemovedListener(IBusyRemovedListener value, bool removeComponentWhenEmpty = true)
	{
		var listeners = BusyRemovedListener.value;
		listeners.Remove(value);
		if (removeComponentWhenEmpty && listeners.Count == 0)
		{
			RemoveBusyRemovedListener();
		}
		else
		{
			ReplaceBusyRemovedListener(listeners);
		}
	}
}
