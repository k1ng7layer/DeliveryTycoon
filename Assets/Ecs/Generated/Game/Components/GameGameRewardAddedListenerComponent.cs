//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public GameRewardAddedListenerComponent GameRewardAddedListener { get { return (GameRewardAddedListenerComponent)GetComponent(GameComponentsLookup.GameRewardAddedListener); } }
	public bool HasGameRewardAddedListener { get { return HasComponent(GameComponentsLookup.GameRewardAddedListener); } }

	public void AddGameRewardAddedListener(System.Collections.Generic.List<IGameRewardAddedListener> newValue)
	{
		var index = GameComponentsLookup.GameRewardAddedListener;
		var component = (GameRewardAddedListenerComponent)CreateComponent(index, typeof(GameRewardAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceGameRewardAddedListener(System.Collections.Generic.List<IGameRewardAddedListener> newValue)
	{
		var index = GameComponentsLookup.GameRewardAddedListener;
		var component = (GameRewardAddedListenerComponent)CreateComponent(index, typeof(GameRewardAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyGameRewardAddedListenerTo(GameRewardAddedListenerComponent copyComponent)
	{
		var index = GameComponentsLookup.GameRewardAddedListener;
		var component = (GameRewardAddedListenerComponent)CreateComponent(index, typeof(GameRewardAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = copyComponent.value;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveGameRewardAddedListener()
	{
		RemoveComponent(GameComponentsLookup.GameRewardAddedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity : IGameRewardAddedListenerEntity { }

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherGameRewardAddedListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> GameRewardAddedListener
	{
		get
		{
			if (_matcherGameRewardAddedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameRewardAddedListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherGameRewardAddedListener = matcher;
			}

			return _matcherGameRewardAddedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public void AddGameRewardAddedListener(IGameRewardAddedListener value)
	{
		var listeners = HasGameRewardAddedListener
			? GameRewardAddedListener.value
			: new System.Collections.Generic.List<IGameRewardAddedListener>();
		listeners.Add(value);
		ReplaceGameRewardAddedListener(listeners);
	}

	public void RemoveGameRewardAddedListener(IGameRewardAddedListener value, bool removeComponentWhenEmpty = true)
	{
		var listeners = GameRewardAddedListener.value;
		listeners.Remove(value);
		if (removeComponentWhenEmpty && listeners.Count == 0)
		{
			RemoveGameRewardAddedListener();
		}
		else
		{
			ReplaceGameRewardAddedListener(listeners);
		}
	}
}
