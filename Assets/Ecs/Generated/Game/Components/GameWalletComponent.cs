//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

	public GameEntity WalletEntity { get { return GetGroup(GameMatcher.Wallet).GetSingleEntity(); } }
	public Ecs.Game.Components.Wallet.WalletComponent Wallet { get { return WalletEntity.Wallet; } }
	public bool HasWallet { get { return WalletEntity != null; } }

	public GameEntity SetWallet(float newValue)
	{
		if (HasWallet)
		{
			throw new JCMG.EntitasRedux.EntitasReduxException(
				"Could not set Wallet!\n" +
				this +
				" already has an entity with Ecs.Game.Components.Wallet.WalletComponent!",
				"You should check if the context already has a WalletEntity before setting it or use context.ReplaceWallet().");
		}
		var entity = CreateEntity();
		#if !ENTITAS_REDUX_NO_IMPL
		entity.AddWallet(newValue);
		#endif
		return entity;
	}

	public void ReplaceWallet(float newValue)
	{
		#if !ENTITAS_REDUX_NO_IMPL
		var entity = WalletEntity;
		if (entity == null)
		{
			entity = SetWallet(newValue);
		}
		else
		{
			entity.ReplaceWallet(newValue);
		}
		#endif
	}

	public void RemoveWallet()
	{
		WalletEntity.Destroy();
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public Ecs.Game.Components.Wallet.WalletComponent Wallet { get { return (Ecs.Game.Components.Wallet.WalletComponent)GetComponent(GameComponentsLookup.Wallet); } }
	public bool HasWallet { get { return HasComponent(GameComponentsLookup.Wallet); } }

	public void AddWallet(float newValue)
	{
		var index = GameComponentsLookup.Wallet;
		var component = (Ecs.Game.Components.Wallet.WalletComponent)CreateComponent(index, typeof(Ecs.Game.Components.Wallet.WalletComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.Value = newValue;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceWallet(float newValue)
	{
		var index = GameComponentsLookup.Wallet;
		var component = (Ecs.Game.Components.Wallet.WalletComponent)CreateComponent(index, typeof(Ecs.Game.Components.Wallet.WalletComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.Value = newValue;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyWalletTo(Ecs.Game.Components.Wallet.WalletComponent copyComponent)
	{
		var index = GameComponentsLookup.Wallet;
		var component = (Ecs.Game.Components.Wallet.WalletComponent)CreateComponent(index, typeof(Ecs.Game.Components.Wallet.WalletComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.Value = copyComponent.Value;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveWallet()
	{
		RemoveComponent(GameComponentsLookup.Wallet);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity : IWalletEntity { }

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherWallet;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> Wallet
	{
		get
		{
			if (_matcherWallet == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.Wallet);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherWallet = matcher;
			}

			return _matcherWallet;
		}
	}
}
